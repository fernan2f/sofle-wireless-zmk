/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    // Definición de capas
    #define BASE 0
    #define LOWER 1
    #define RAISE 2
    #define RGB 3
    #define ADJUST 4

    // Activación condicional de capa ADJUST al presionar LOWER + RAISE
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base";
            bindings = <
                // Primera fila
                &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &none &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp GRV
                // Segunda fila
                &kp TAB &kp Q &kp W &kp E &kp R &kp T &none &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                // Tercera fila
                &kp LCTL &kp A &kp S &kp D &kp F &kp G &none &kp H &kp J &kp K &kp L &kp TILD &kp QUOT
                // Cuarta fila
                &kp LSFT &kp Z &kp X &kp C &kp V &kp B &kp MUTE &none &kp N &kp M &kp COMMA &kp DOT &kp SLSH &kp RSFT
                // Última fila (thumb cluster)
                &kp LGUI &kp LALT &kp LCTL &mo LOWER &kp RET &kp SPC &mo RAISE &kp RCTL &kp RALT &kp RGUI
            >;
        };

        lower_layer {
            display-name = "lower";
            bindings = <
                &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &none &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
                &kp GRV &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &none &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp F12
                &trans &kp EXCL &kp AT &kp HASH &kp DLR &kp PERC &none &kp CIRC &kp AMPS &kp ASTERISK &kp LPRN &kp RPRN &kp PIPE
                &trans &kp EQL &kp MINUS &kp PLUS &kp LBRC &kp RBRC &none &none &kp LBKT &kp RBKT &kp SCLN &kp COLN &kp BSLH &trans
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        raise_layer {
            display-name = "raise";
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none &none &none &none &none &none &none
                &trans &kp INS &kp PSCR &kp K_CMENU &trans &trans &none &kp PG_UP &none &kp UP &none &kp N0 &none
                &trans &kp LALT &kp LCTRL &kp LSHIFT &trans &kp CAPS &none &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp DEL &kp BSPC
                &trans &kp UNDO &kp CUT &kp COPY &kp PASTE &trans &none &none &none &none &none &none &none &none
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
            >;
        };

        adjust_layer {
            display-name = "adjust";
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none &none &none &none &none &none &none
                &ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF &none &none &none &none &none &none &none
                &none &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none &none &none &none &none &none &none &none &none &none
                &none &none &none &none &none &none &rgb_ug RGB_TOG &none &none &none &none &none &none &none
                &none &none &none &none &none &none &none &none &none &none
            >;
        };
    };
};
